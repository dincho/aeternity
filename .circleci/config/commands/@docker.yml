setup_docker:
  steps:
    - setup_remote_docker:
        docker_layer_caching: true
        version: "17.09.0-ce"

docker_login:
  steps:
    - setup_secrets
    - run:
        name: Login to Docker Hub
        command: |
          docker login -u $(</secrets/DOCKER_USER) -p $(</secrets/DOCKER_PASS)

docker_build:
  parameters:
    tag:
      type: string
  steps:
    - run:
        name: Build docker image
        command: |
          docker pull aeternity/builder:bionic-otp22
          docker build -t << pipeline.parameters.docker_repo >>:<< parameters.tag >> .
    - run:
        name: Start docker image
        command: |
          docker run -d -e AE__CHAIN__PERSIST -e AE__FORK_MANAGEMENT__NETWORK_ID \
            --name ae_<< pipeline.git.revision >> \
            << pipeline.parameters.docker_repo >>:<< parameters.tag >> \
            bin/aeternity console -noinput -network_id ae_test
    - run:
        name: Display logs from docker image
        command: |
          docker logs -f ae_<< pipeline.git.revision >>
        background: true
    - run:
        name: Wait for container to be ready
        command: |
          docker exec -it ae_<< pipeline.git.revision >> curl -4 --retry-connrefused --max-time 60 --retry 6 --connect-timeout 10 http://localhost:3013/v2/status
    - run:
        name: Health check
        command: |
          until [ "`docker inspect -f {{.State.Health.Status}} ae_<< pipeline.git.revision >>`"=="healthy" ]; do
              sleep 1;
          done;

docker_tag:
  parameters:
    src:
      type: string
    tag:
      type: string
  steps:
    - docker_login
    - run:
        name: Tag docker image
        command: |
          docker pull << pipeline.parameters.docker_repo >>:<< parameters.src >>
          docker tag << pipeline.parameters.docker_repo >>:<< parameters.src >> << pipeline.parameters.docker_repo >>:<< parameters.tag >>

docker_push:
  parameters:
    tag:
      type: string
  steps:
    - docker_login
    - run:
        name: Push Docker image
        command: |
          docker push << pipeline.parameters.docker_repo >>:<< parameters.tag >>

docker_buildx:
  parameters:
    tag:
      type: string
    latest:
      type: boolean
  steps:
    - run:
        name: Install emulation dependencies
        command: |
          sudo apt-get update && sudo apt-get install -y qemu binfmt-support qemu-user-static
    - run:
        name: Install buildx
        command: |
          mkdir -p ~/.docker/cli-plugins
          baseUrl="https://github.com/docker/buildx/releases/download"
          fileName="buildx-v<< pipeline.parameters.buildx-version >>.linux-amd64"
          url="${baseUrl}/v<< pipeline.parameters.buildx-version >>/${fileName}"
          curl -sSL -o ~/.docker/cli-plugins/docker-buildx $url
          chmod a+x ~/.docker/cli-plugins/docker-buildx
    - run:
        name: Setup buildx
        command: |
          docker buildx install
          docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
          docker context create aeternity
          docker buildx create --use --platform << pipeline.parameters.buildx-platforms >> aeternity
          docker buildx inspect --builder aeternity --bootstrap
    - run:
        name: Login to docker.io registry
        command: |
          docker login -u $DOCKER_USER -p $DOCKER_PASS
    - unless:
        condition: << parameters.latest >>
        steps:
          - run:
              name: Build and push docker image to docker.io registry
              environment:
                DOCKER_CLI_EXPERIMENTAL: enabled
              command: |
                docker buildx build --progress=plain --push \
                  -t << pipeline.parameters.docker_repo >>:<< parameters.tag >> \
                  --platform << pipeline.parameters.buildx-platforms >> \
                  .
    - when:
        condition: << parameters.latest >>
        steps:
          - run:
              name: Build and push docker image to docker.io registry
              environment:
                DOCKER_CLI_EXPERIMENTAL: enabled
              command: |
                docker buildx build --progress=plain --push \
                  -t << pipeline.parameters.docker_repo >>:<< parameters.tag >> \
                  -t << pipeline.parameters.docker_repo >>:latest \
                  --platform << pipeline.parameters.buildx-platforms >> \
                  .
